<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Informações do Computador</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }


        h1 {
            margin-bottom: 20px;
        }

        .container {
            text-align: center;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 10px;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        tbody tr:hover {
            background-color: #f5f5f5;
        }

        .add-manutencao {
            text-align: right;
            margin-bottom: 20px;
        }

    </style>
</head>
<body>
    
    <%- include("./../partials/header.ejs") %>
    <%- include("../main.ejs") %>

    <div class="container">
        <h1>Informações do computador</h1>
        <div class="container">
            <h3><%=computador.id%>: <%= computador.nome %></h3>
            <p>Pertence à: <%= computador.empresa.nome%></p>

            <h3>Histórico de manutenções: </h3>
            
            <div id="manutencoesTable"></div> <!-- Local onde a tabela será inserida -->

            <small id="createdAtFormatted"></small>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const createdAt = "<%= computador.createdAt %>"; // Data fornecida pelo servidor
            // Formatar a data de registro do computador para o formato brasileiro
            const createdAtFormatted = new Date(createdAt).toLocaleString('pt-BR', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            document.getElementById("createdAtFormatted").textContent = "Registrado em: " + createdAtFormatted;

            // Função para carregar o histórico de manutenções
            function carregarManutencoes() {

                const computadorId = "<%= computador.id %>"; // ID do computador

                fetch(`/manutencoes-by-computador?id=${computadorId}`)
                    .then(response => response.json())
                    .then(data => {
                        // Ordenar as manutenções pela data de entrada, da mais recente para a mais antiga
                        data.sort((a, b) => new Date(b.dataEntrada) - new Date(a.dataEntrada));

                        const table = document.createElement('table');
                        table.classList.add('table');

                        // Cabeçalho da tabela
                        const thead = document.createElement('thead');
                        const trHead = document.createElement('tr');
                        ['ID', 'Data de Entrada', 'Data de Saída', 'Descrição', 'Ver Manutenção'].forEach(headerText => {
                            const th = document.createElement('th');
                            th.textContent = headerText;
                            trHead.appendChild(th);
                        });
                        thead.appendChild(trHead);
                        table.appendChild(thead);

                        // Corpo da tabela
                        const tbody = document.createElement('tbody');
                        data.forEach(manut => {
                            const trBody = document.createElement('tr');
                            ['id', 'dataEntrada', 'dataSaida', 'descricao'].forEach(prop => {
                                const td = document.createElement('td');
                                if (prop === 'dataEntrada' || prop === 'dataSaida') {
                                    if (prop === 'dataSaida' && manut[prop] === null){
                                        td.textContent = 'Manutenção em andamento';
                                    } else {

                                        
                                        const date = new Date(manut[prop]).toLocaleString('pt-BR', {
                                            day: '2-digit',
                                            month: '2-digit',
                                            year: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        });
                                        td.textContent = date;
                                    }
                                } else {
                                    td.textContent = manut[prop];
                                }
                                trBody.appendChild(td);
                            });

                            // Coluna para visualizar a manutenção
                            const tdVerManutencao = document.createElement('td');
                            const linkVerManutencao = document.createElement('a');
                            linkVerManutencao.href = `/ver-manutencao?id=${manut.id}`;
                            linkVerManutencao.textContent = 'Ver';
                            linkVerManutencao.className = "btn btn-primary btn-sm"
                            tdVerManutencao.appendChild(linkVerManutencao);
                            trBody.appendChild(tdVerManutencao);

                            tbody.appendChild(trBody);
                        });
                        table.appendChild(tbody);

                        // Adicionando a tabela ao DOM
                        document.getElementById('manutencoesTable').appendChild(table);
                    })
                    .catch(error => console.error('Erro ao carregar manutenções:', error));
            }

            // Chamando a função para carregar o histórico de manutenções
            carregarManutencoes();
        });
    </script>
</body>
</html>
